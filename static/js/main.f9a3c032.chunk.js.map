{"version":3,"sources":["components/ShowTeam.js","components/AddTeam.js","App.js","reportWebVitals.js","index.js"],"names":["ShowTeam","isLoading","useDisclosure","isOpen","onOpen","onClose","useState","team","setTeam","useEffect","data","JSON","parse","localStorage","getItem","console","log","colorScheme","mr","onClick","length","map","index","pokimon","name","variant","AddTeam","pokimons","useBoolean","flag","setFlag","off","filter","poki","on","toString","setItem","stringify","toggle","App","setPokimons","filteredPokimons","setFilteredPokimons","selectedPokimon","setSelectedPokimon","setIsLoading","fetch","then","response","json","results","catch","error","className","maxW","centerContent","padding","bg","children","onChange","e","pokemon","toLowerCase","includes","target","value","type","placeholder","spacing","boxShadow","p","rounded","height","mx","mt","weight","url","details","base_experience","abilities","ability","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9a3c032.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, useDisclosure } from \"@chakra-ui/react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\n\nexport default function ShowTeam({ isLoading }) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [team, setTeam] = useState([]);\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(\"teamData\"));\n    console.log(data);\n    setTeam(data);\n  }, [isLoading, isOpen]);\n  console.log(team);\n  return (\n    <div>\n      <Button colorScheme=\"blue\" mr={3} onClick={onOpen}>\n        My Teams\n      </Button>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>My Team</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <div>\n              {team?.length > 0 &&\n                team.map((data, index) => (\n                  <div>\n                    <h1>Poki # {index}</h1>\n                    <p>Name:{data.pokimon.name}</p>\n                    <hr />\n                  </div>\n                ))}\n              <br />\n            </div>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\n              Close\n            </Button>\n            <Button variant=\"ghost\">Secondary Action</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { useBoolean, Button } from \"@chakra-ui/react\";\n\nexport default function AddTeam({ pokimons }) {\n  const [flag, setFlag] = useBoolean();\n\n  useEffect(() => {\n    setFlag.off();\n    const data = JSON.parse(localStorage.getItem(\"teamData\")) ?? [];\n    console.log(data, pokimons);\n    const teamFilteredArray = data.filter((poki) => {\n      console.log(poki.pokimon.name, pokimons.pokimon.name);\n      return poki.pokimon.name === pokimons.pokimon.name;\n    });\n    if (teamFilteredArray.length > 0) {\n      setFlag.on();\n    }\n  }, [pokimons, setFlag]);\n  const ChangeTeam = (team) => {\n    const data = JSON.parse(localStorage.getItem(\"teamData\")) ?? [];\n    if (flag) {\n      console.log(pokimons.pokimon.name);\n      localStorage.setItem(\n        \"teamData\",\n        JSON.stringify(\n          data.filter((poki) => poki.pokimon.name !== pokimons.pokimon.name)\n        )\n      );\n      console.log(\"Found\");\n    } else {\n      console.log(data);\n      localStorage.setItem(\"teamData\", JSON.stringify([...data, pokimons]));\n      console.log(\"not found\");\n    }\n\n    setFlag.toggle();\n  };\n  return (\n    <div>\n      <p>Boolean state: {flag.toString()}</p>\n\n      <Button onClick={ChangeTeam} variant=\"ghost\">\n        {flag ? \"Remove from Team\" : \"Add to Team\"}\n      </Button>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Input,\n  Container,\n  VStack,\n  InputGroup,\n  InputLeftAddon,\n  Button,\n  useDisclosure,\n  Img,\n} from \"@chakra-ui/react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport {\n  List,\n  ListItem,\n  ListIcon,\n  OrderedList,\n  UnorderedList,\n} from \"@chakra-ui/react\";\nimport { Spinner } from \"@chakra-ui/react\";\nimport ShowTeam from \"./components/ShowTeam\";\nimport AddTeam from \"./components/AddTeam\";\n\n//main function\nfunction App() {\n  const [team, setTeam] = useState([]);\n  const [pokimons, setPokimons] = useState([]);\n  const [filteredPokimons, setFilteredPokimons] = useState([]);\n  const [selectedPokimon, setSelectedPokimon] = useState(null);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [isLoading, setIsLoading] = useState(false);\n  //fetching data\n  useEffect(() => {\n    fetch(`https://pokeapi.co/api/v2/pokemon?limit=100&offset=200`, {}).then(\n      (response) => {\n        response\n          .json()\n          .then((json) => {\n            setPokimons(json.results);\n            setFilteredPokimons(json.results);\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      }\n    );\n  }, []);\n\n  //Handling Search\n  const handleSearch = (e) => {\n    setFilteredPokimons(\n      pokimons.filter((pokemon) => {\n        return pokemon.name\n          .toLowerCase()\n          .includes(e.target.value.toLowerCase());\n      })\n    );\n  };\n  return (\n    <div className=\"App\">\n      <VStack>\n        <Container maxW=\"container.xl\" centerContent>\n          <Box padding=\"4\" bg=\"gray.100\" maxW=\"3xl\">\n            <InputGroup>\n              <InputLeftAddon children=\"Search\" />\n              <Input\n                onChange={handleSearch}\n                type=\"tel\"\n                placeholder=\"Enter Pokimon name\"\n              />\n            </InputGroup>\n            <ShowTeam team={team} isLoading={isLoading} setTeam={setTeam} />\n          </Box>\n        </Container>\n      </VStack>\n      <header className=\"App-header\"></header>\n      {filteredPokimons &&\n        filteredPokimons.map((pokimon) => {\n          return (\n            <List spacing={3}>\n              <OrderedList>\n                <Box\n                  boxShadow=\"xs\"\n                  p=\"6\"\n                  rounded=\"md\"\n                  maxW=\"960px\"\n                  height={10}\n                  mx=\"auto\"\n                  mt={10}\n                  p={10}\n                  color=\"gray\"\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  justifyContent=\"space-between\"\n                  border=\"1px\"\n                  key={pokimon.name}\n                >\n                  <h1>{pokimon.name}</h1>\n                  <p>{pokimon.weight}</p>\n\n                  <Button\n                    onClick={() => {\n                      setIsLoading(true);\n                      onOpen();\n                      fetch(pokimon.url)\n                        .then((response) => response.json())\n                        .then((json) => {\n                          setSelectedPokimon({ pokimon, details: json });\n\n                          setIsLoading(false);\n                        });\n                    }}\n                  >\n                    Details\n                  </Button>\n                </Box>\n              </OrderedList>\n            </List>\n          );\n        })}\n\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Modal Title</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            {isLoading ? (\n              <Spinner />\n            ) : (\n              <div>\n                Name: {selectedPokimon?.pokimon.name} <br />\n                Experience: {selectedPokimon?.details.base_experience}\n                <br />\n                Abilities:\n                {selectedPokimon?.details.abilities.map((ability, index) => (\n                  <p key={index}>{ability.ability.name}</p>\n                ))}\n                <br />\n              </div>\n            )}\n          </ModalBody>\n\n          <ModalFooter>\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\n              Close\n            </Button>\n            {selectedPokimon && <AddTeam pokimons={selectedPokimon} />}\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// 1. import `ChakraProvider` component\nimport { ChakraProvider } from \"@chakra-ui/react\"\nReactDOM.render(\n  <React.StrictMode>\n      <ChakraProvider>\n      <App />\n    </ChakraProvider>\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}